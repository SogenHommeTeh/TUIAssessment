// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using TUI.Data;

namespace TUI.Application.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TUI.Data.Aircrafts.Models.AircraftModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("ConsumptionPerKm");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<Guid>("PublicId");

                    b.Property<double>("TakeOffEffort");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("PublicId")
                        .IsUnique();

                    b.ToTable("Aircrafts");
                });

            modelBuilder.Entity("TUI.Data.Airports.Models.AirportModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<Guid>("PublicId");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("PublicId")
                        .IsUnique();

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("TUI.Data.Flights.Models.FlightModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AircraftId");

                    b.Property<int>("ArrivalAirportId");

                    b.Property<DateTime>("ArrivalTime");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("DepartureAirportId");

                    b.Property<DateTime>("DepartureTime");

                    b.Property<double>("DistanceInKm");

                    b.Property<double>("FuelNeeded");

                    b.Property<Guid>("PublicId");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId");

                    b.HasIndex("ArrivalAirportId");

                    b.HasIndex("ArrivalTime");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("DepartureAirportId");

                    b.HasIndex("DepartureTime");

                    b.HasIndex("PublicId")
                        .IsUnique();

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("TUI.Data.Flights.Models.FlightModel", b =>
                {
                    b.HasOne("TUI.Data.Aircrafts.Models.AircraftModel", "Aircraft")
                        .WithMany("Flights")
                        .HasForeignKey("AircraftId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TUI.Data.Airports.Models.AirportModel", "ArrivalAirport")
                        .WithMany("ArrivalFlights")
                        .HasForeignKey("ArrivalAirportId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TUI.Data.Airports.Models.AirportModel", "DepartureAirport")
                        .WithMany("DepartureFlights")
                        .HasForeignKey("DepartureAirportId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
